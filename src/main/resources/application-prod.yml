spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate             # 운영은 반드시 validate (자동 변경 금지)
    show-sql: false                  # 운영에서는 SQL 출력 비활성화
  #    properties:
  #      hibernate:
  #        format_sql: true

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      username: ${SPRING_DATA_REDIS_USERNAME}
      password: ${SPRING_DATA_REDIS_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/naver'
            scope:
              - name
              - email
            provider: naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/kakao'
            scope:
              - profile_nickname
              - account_email
            provider: kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

supabase:
  url: ${SUPABASE_URL}
  key: ${SUPABASE_KEY}
  profile-bucket: ${SUPABASE_PROFILE_BUCKET}
  poster-bucket: ${SUPABASE_POSTER_BUCKET}
  docs-bucket: ${SUPABASE_DOCS_BUCKET}

jwt:
  secret: ${JWT_SECRET} # openssl rand -base64 32
  access-expiration-ms: ${JWT_ACCESS_EXPIRATION_MS:600000}
  refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:86400000}

aws:
  sqs:
    endpoint: ${SQS_ENDPOINT}
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}

logging:
  level:
    root: WARN
    #    com.team03: INFO              # 운영 로그는 최소한만 출력
    com.team03: WARN              # INFO보다 더 낮춰도 괜찮음
    # -> 실시간 모니터링 툴이 있지 않다면, 불필요한 로그까지 나오는 걸 방지할 수 있음

swagger:
  enabled: false                    # 운영에서는 Swagger 비공개